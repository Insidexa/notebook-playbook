---
nix_version: 2.26.2
nix_download_file_name: "nix-{{ nix_version }}-x86_64-linux"
nix_install_url: https://releases.nixos.org/nix/nix-{{ nix_version }}/{{ nix_download_file_name }}.tar.xz
nix_dest_download_path: /tmp/nix.tar.gz
selinux_policy_file: /etc/selinux/targeted/nix_custom_policy.cil
nix_conf_path: /etc/nix/nix.conf
nix_env_block: |
  # Nix
  if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
    . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
  fi
  # End Nix

semanage_rules:
  - { target: '/nix/store/[^/]+/etc(/.*)?', setype: 'etc_t' }
  - { target: '/nix/store/[^/]+/lib(/.*)?', setype: 'lib_t' }
  - { target: '/nix/store/[^/]+/lib/systemd/system(/.*)?', setype: 'systemd_unit_file_t' }
  - { target: '/nix/store/[^/]+/man(/.*)?', setype: 'man_t' }
  - { target: '/nix/store/[^/]+/s?bin(/.*)?', setype: 'bin_t' }
  - { target: '/nix/store/[^/]+/share(/.*)?', setype: 'usr_t' }
  - { target: '/nix/var/nix/daemon-socket(/.*)?', setype: 'var_run_t' }
  - { target: '/nix/var/nix/profiles(/per-user/[^/]+)?/[^/]+', setype: 'usr_t' }
nix_files:
  - /nix
  - /var/lib/nix
  - /var/log/nix
  - /etc/profile.d/nix.sh
  - /etc/nix
  - /etc/profile.d/nix.sh
  - /etc/tmpfiles.d/nix-daemon.conf
  - /etc/zshrc.backup-before-nix
  - /etc/bashrc.backup-before-nix
  - /etc/bash.bashrc.backup-before-nix
  - /etc/profile.d/nix.sh.backup-before-nix
  - /root/.nix-channels
  - /root/.nix-defexpr
  - /root/.nix-profile
  - /root/.cache/nix
  - "{{ user_home }}/nix"
  - "{{ user_home }}/.cache/nix"
  - "{{ user_home }}/.local/state/nix"
  - "{{ user_home }}/.nix-profile"
