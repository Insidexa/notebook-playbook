---
- name: Uninstall Nix
  become: true
  tags:
    - uninstall
  block:
    - name: Stop and disable Nix systemd services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      ignore_errors: true
      loop:
        - nix-daemon.service
        - nix-daemon.socket

    - name: stat bash.bashrc.backup-before-nix
      stat:
        path: /etc/bash.bashrc.backup-before-nix
      register: bash_bashrc_backup_stat
    - name: Restore bash.bashrc
      shell: mv /etc/bash.bashrc.backup-before-nix /etc/bash.bashrc
      become: true
      when: bash_bashrc_backup_stat.stat.exists

    - name: stat bashrc.backup-before-nix
      stat:
        path: /etc/bashrc.backup-before-nix
      register: bashrc_backup_stat
    - name: Restore bashrc
      shell: mv /etc/bashrc.backup-before-nix /etc/bashrc
      become: true
      when: bashrc_backup_stat.stat.exists

    - name: stat zshrc.backup-before-nix
      stat:
        path: /etc/zshrc.backup-before-nix
      register: zshrc_backup_stat
    - name: Restore zshrc
      shell: mv /etc/zshrc.backup-before-nix /etc/zshrc
      become: true
      when: zshrc_backup_stat.stat.exists

    - name: Remove Nix directories
      file:
        path: "{{ item }}"
        state: absent
      loop: nix_files

    - name: Delete nixbld users
      user:
        name: "nixbld{{ item }}"
        state: absent
        remove: yes
      loop: "{{ range(1, 33) | list }}"

    - name: Delete nixbld group
      group:
        name: nixbld
        state: absent

    - name: Remove SELinux Nix policy
      command: semodule -r local_nix_policy

    - name: Delete SELinux policy file
      file:
        path: "{{ selinux_policy_file }}"
        state: absent

    - name: Relabel file system to default
      command: restorecon -R /nix
