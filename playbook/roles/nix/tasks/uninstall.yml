---
- name: Uninstall Nix
  become: true
  tags:
    - uninstall
  block:
    - name: Stop and disable Nix systemd services if they exist
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      failed_when: false  # Prevent failures if services are already removed
      loop:
        - nix-daemon.service
        - nix-daemon.socket

    - name: Check if backup files exist
      ansible.builtin.stat:
        path: "{{ item.backup }}"
      loop: "{{ nix_bash_changes }}"
      register: backup_stat

    - name: Restore backup files if they exist
      ansible.builtin.command:
        cmd: mv "{{ item.item.backup }}" "{{ item.item.original }}"
      when: item.stat.exists
      loop: "{{ backup_stat.results }}"

    - name: Check if Nix SELinux policy is installed
      ansible.builtin.command: semodule -l
      register: semodule_list
      changed_when: false

    - name: Remove SELinux Nix policy if installed
      ansible.builtin.command: semodule -r {{ nix_selinux_policy_name }}
      when: nix_selinux_policy_name in semodule_list.stdout
      changed_when: true

    - name: Delete SELinux policy file if it exists
      ansible.builtin.file:
        path: "{{ nix_selinux_policy_file }}"
        state: absent

    - name: Relabel /nix filesystem to default if it exists
      ansible.builtin.command: restorecon -R /nix
      when: nix_files | length > 0
      changed_when: false

    - name: Remove Nix directories if they exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ nix_files }}"

    - name: Check if nixbld users exist
      ansible.builtin.command: getent passwd nixbld{{ item }}
      register: nixbld_check
      ignore_errors: true
      changed_when: false
      loop: "{{ range(1, 33) | list }}"

    - name: Delete nixbld users if they exist
      ansible.builtin.user:
        name: "nixbld{{ item.item }}"
        state: absent
        remove: true
      when: nixbld_check.results[item.index].rc == 0
      loop: "{{ nixbld_check.results | list }}"
      loop_control:
        index_var: index

    - name: Check if nixbld group exists
      ansible.builtin.command: getent group nixbld
      register: nixbld_check
      changed_when: false
      failed_when: nixbld_check.rc > 1  # Ignore if group does not exist

    - name: Delete nixbld group if it exists
      ansible.builtin.group:
        name: nixbld
        state: absent
      when: nixbld_check.rc == 0
