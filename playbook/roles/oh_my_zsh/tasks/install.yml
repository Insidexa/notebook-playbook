---
- name: Install ZSH
  tags:
    - install
  block:
    - name: Install ZSH
      become: true
      ansible.builtin.package:
        name: zsh
        state: present

    - name: Set ZSH as default shell
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: "{{ zsh_binary }}"
      changed_when: false

- name: Check if OMZ is installed
  ansible.builtin.stat:
    path: "{{ user_home }}/{{ oh_my_zsh_dir }}"
  register: omz_path
  tags:
    - install

- name: Install OMZ
  when: not omz_path.stat.exists
  tags:
    - install
  block:
    - name: Create temporary file
      ansible.builtin.tempfile:
        state: file
      register: oh_my_zsh_install_script

    - name: Download installer
      ansible.builtin.get_url:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: "{{ oh_my_zsh_install_script.path }}"
        mode: "0755"

    - name: Install OMZ
      ansible.builtin.command: "{{ oh_my_zsh_install_script.path }} --unattended"
      register: install_omz_output
      changed_when: install_omz_output.rc == 0

    - name: Remove the temporary file
      ansible.builtin.file:
        path: "{{ oh_my_zsh_install_script.path }}"
        state: absent
      when: oh_my_zsh_install_script.path is defined

- name: OMZ config
  tags:
    - install
  block:
    - name: Check if .zshrc exists
      ansible.builtin.stat:
        path: "{{ user_home }}/.zshrc"
      register: zshrc_file

    - name: Write .zshrc
      ansible.builtin.template:
        src: .zshrc.j2
        dest: "{{ user_home }}/.zshrc"
        mode: u=rw,go=r
        force: false
      when: not zshrc_file.stat.exists

    - name: Check if local bin path exists in .zshrc
      ansible.builtin.lineinfile:
        path: "{{ user_home }}/.zshrc"
        regexp: "^export PATH=\"\\$PATH:\\$HOME/{{ local_bin_dir }}/\""
        line: 'export PATH="$PATH:$HOME/{{ local_bin_dir }}/"'
        state: present
        mode: "0644"
        create: true
